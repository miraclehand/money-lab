services:
  price-collector:
    build: .
    container_name: price-collector
    networks:
      - ${DB_NETWORK_NAME}
      - ${REDIS_NETWORK_NAME}
    environment:
      - MONGO_BASE_URI=${MONGO_BASE_URI}
      - STOCKDB_ALIAS=${STOCKDB_ALIAS}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - COLLECTOR_IP=${COLLECTOR_IP}
      - COLLECTOR_PORT=${COLLECTOR_PORT}
    command: python main.py
    ports:
      - "${COLLECTOR_PORT}:${COLLECTOR_PORT}"
    volumes:
      - .:/app

  price-collector-worker:
    build: .
    environment:
      - MONGO_BASE_URI=${MONGO_BASE_URI}
      - STOCKDB_ALIAS=${STOCKDB_ALIAS}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    command: >
      bash -c "watchmedo auto-restart --directory=./app --pattern='*.py' --recursive
      -- celery -A app.celery_app.worker worker
      --loglevel=info
      --pool=solo
      2>&1 | tee -a /app/data/logs/celery_work.log"
    depends_on:
      - price-collector
    networks:
      - ${DB_NETWORK_NAME}
      - ${REDIS_NETWORK_NAME}
    volumes:
      - .:/app

  price-collector-beat:
    build: .
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    command: celery -A app.celery_app.beat beat --loglevel=info
    depends_on:
      - price-collector
    networks:
      - ${DB_NETWORK_NAME}
      - ${REDIS_NETWORK_NAME}
    volumes:
      - .:/app

networks:
  redis-network:
    external: true
  moneylab-db-network:
    external: true

